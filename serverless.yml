service: s3-to-frameio-lambda-copy
frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8
  memorySize: 256
  region: eu-north-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "arn:aws:lambda:eu-north-1:*"
    - Effect: "Allow"
      Action:
        - sqs:SendMessage
      Resource: "arn:aws:sqs:eu-north-1:*"
plugins:
  - serverless-python-requirements
  - serverless-plugin-lambda-dead-letter
custom:
  pythonRequirements:
    dockerizePip: true


functions:
  child:
    handler: handler.child
    reservedConcurrency: 5

    deadLetter:
      sqs: # New Queue with these properties
        queueName: child-dl-queue
        delaySeconds: 60
        maximumMessageSize: 2048
        messageRetentionPeriod: 200000
        receiveMessageWaitTimeSeconds: 15
        visibilityTimeout: 800

  hello:
    handler: handler.hello
    reservedConcurrency: 1
    events:
      - http:
          path: /hello
          method: get

    deadLetter:
      sqs: # New Queue with these properties
        queueName: hello-dl-queue
        delaySeconds: 60
        maximumMessageSize: 2048
        messageRetentionPeriod: 200000
        receiveMessageWaitTimeSeconds: 15
        visibilityTimeout: 800